name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

env:
  FLUTTER_VERSION: '3.35.6'

jobs:
  # Quick validation for PRs
  pr-check:
    name: 🔍 PR Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        working-directory: ./aether_corp_web
        run: flutter pub get

      - name: Run Flutter analyze
        working-directory: ./aether_corp_web
        run: flutter analyze --fatal-infos

      - name: Check formatting
        working-directory: ./aether_corp_web
        run: dart format --output=none --set-exit-if-changed .

      - name: Run tests
        working-directory: ./aether_corp_web
        run: flutter test

      - name: Build check
        working-directory: ./aether_corp_web
        run: flutter build web --release --no-tree-shake-icons

      - name: Comment PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('## 🔍 PR Validation Results')
            );
            
            const status = '${{ job.status }}';
            const emoji = status === 'success' ? '✅' : '❌';
            const color = status === 'success' ? 'green' : 'red';
            
            const body = `## 🔍 PR Validation Results ${emoji}
            
            **Status:** \`${status}\`
            
            ### Checks Performed:
            - ✅ Code analysis
            - ✅ Formatting check  
            - ✅ Unit tests
            - ✅ Build verification
            
            **Result:** ${status === 'success' ? 'All checks passed! Ready for review.' : 'Some checks failed. Please fix the issues before merging.'}
            
            ---
            *This comment will be updated on each push to the PR.*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }



